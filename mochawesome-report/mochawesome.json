{
  "stats": {
    "suites": 1,
    "tests": 4,
    "passes": 4,
    "pending": 0,
    "failures": 0,
    "start": "2019-10-12T16:36:56.844Z",
    "end": "2019-10-12T16:36:59.097Z",
    "duration": 2253,
    "testsRegistered": 4,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "c130e8e7-4609-4f5e-a52d-db8eaec993b0",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "0c165724-bb4d-4326-b89a-871c2781e7e2",
          "title": "Unit test for fetching images from flickr api based on serach input param as query string - Node",
          "fullFile": "C:\\Flickr\\flickr-backend\\tests\\public-feed-service-test.js",
          "file": "\\tests\\public-feed-service-test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "it should /GET /getFlickrPictures successfully - status code 200",
              "fullTitle": "Unit test for fetching images from flickr api based on serach input param as query string - Node it should /GET /getFlickrPictures successfully - status code 200",
              "timedOut": false,
              "duration": 1270,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(server)\n  .get('/publicFeed/getFlickrPictures')\n  .end((err, res) => {\n    res.should.have.status(200);\n    done();\n  });",
              "err": {},
              "uuid": "f6aa12ad-4b30-43d7-a02b-eacc75b315d6",
              "parentUUID": "0c165724-bb4d-4326-b89a-871c2781e7e2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "it should /GET /getFlickrPictures failed - status code 404",
              "fullTitle": "Unit test for fetching images from flickr api based on serach input param as query string - Node it should /GET /getFlickrPictures failed - status code 404",
              "timedOut": false,
              "duration": 7,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(server)\n  .get('/publicFeed/getFlickrPictures_invalid')\n  .end((err, res) => {\n    res.should.have.status(404);\n    done();\n  });",
              "err": {},
              "uuid": "cff098ab-cd14-4def-a1a7-bcac81561870",
              "parentUUID": "0c165724-bb4d-4326-b89a-871c2781e7e2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "it should /GET /getFlickrPictures successfully - status code 200",
              "fullTitle": "Unit test for fetching images from flickr api based on serach input param as query string - Node it should /GET /getFlickrPictures successfully - status code 200",
              "timedOut": false,
              "duration": 514,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(server)\n  .get('/publicFeed/getFlickrPictures')\n  .query({ serachInput: 'Singapore', count: 50 })\n  .end((err, res) => {\n    res.should.have.status(200);\n    done();\n  });",
              "err": {},
              "uuid": "e15b0d67-79b0-48b2-b47c-e3b86c467abc",
              "parentUUID": "0c165724-bb4d-4326-b89a-871c2781e7e2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "it should /GET /getFlickrPictures successfully - status code 200",
              "fullTitle": "Unit test for fetching images from flickr api based on serach input param as query string - Node it should /GET /getFlickrPictures successfully - status code 200",
              "timedOut": false,
              "duration": 444,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(server)\n  .get('/publicFeed/getFlickrPictures')\n  .query({ serachInput: 'nyc', count: 'ABCD' })\n  .end((err, res) => {\n    res.should.have.status(200); // flickr API does not verify datatype of the parameters in query string, hence getting 200 OK with invalid 'count'\n    done();\n  });",
              "err": {},
              "uuid": "d32a7a26-a3f4-4d54-badd-0703420d780c",
              "parentUUID": "0c165724-bb4d-4326-b89a-871c2781e7e2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f6aa12ad-4b30-43d7-a02b-eacc75b315d6",
            "cff098ab-cd14-4def-a1a7-bcac81561870",
            "e15b0d67-79b0-48b2-b47c-e3b86c467abc",
            "d32a7a26-a3f4-4d54-badd-0703420d780c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2235,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "6.2.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": null,
      "version": "4.0.1"
    }
  }
}